This is my example chat room.
It uses React, Redux, Socket.io, and Flask.
To get these initial chats, the client sends a message event to the server, which responds with a list of chats.
The list is static right now, but could be dynamically generated from a database.
The client-side code to get the list looks something like this:
`const result = await asyncEmit("getChatMessages", null);`
The server can also respond with its own messages, and will broadcast messages from other users to all connected clients.
Half of the time you send a message, the server wont re-broadcast your message, and will respond with an error. This is to demonstrate an example of error-handling on the client-side.
If you send a message that says 'Hello Server', the server will respond with a message that says 'Hello <your name>'.