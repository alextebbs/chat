This is my example chat room.
It uses React, Redux, Socket.io, and Flask.
To get these initial chats, the client sends a message event to the server, which responds with a list of chats.
The list is static right now, but could be dynamically generated from a database.
The client-side code to get the list looks something like this:
`const result = await asyncEmit("getChatMessages", null);`
The server can also respond with its own messages, and will broadcast messages from other users to all connected clients.
If you send a message that says 'Hello Server', the server will respond with a message that says 'Hello <your name>'.
If you set your name to 'error', the server will randomly error out, demonstrating the error handling behavior.
One fourth of the time, the server will time out, one fourth of the time, it will send back an error message, and half of the time, it will handle the message normally.